stages:
  - test app
  - build
  - test
  - development
  - production

variables:
  APP_VERSION: $CI_PIPELINE_IID

test app:
  image: node:lts-alpine
  stage: test app
  script:
    - yarn install
    - yarn lint
    - yarn test

  coverage: '/All files[^\|]*\|[^\|]*\s+([\d\.]+)/'
  artifacts:
    expose_as: "Producing Coverage Report"
    paths:
      - coverage/
    when: always
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/index.html

build website:
  image: node:lts-alpine
  stage: build
  script:
    - yarn install
    - yarn build
    - echo $APP_VERSION > dist/version.html

  artifacts:
    paths:
      - dist

test website:
  image: node:20.14.0-alpine
  stage: test
  script:
    - yarn global add serve
    - apk add curl
    - serve -s dist &
    - sleep 10
    - curl http://localhost:3000 | grep "Web Map Application"

# Template job for deployment to avoid repetitions
.deploy-template:
  image:
    name: amazon/aws-cli:2.16.0
    entrypoint: [""]
  rules:
    # If the branch is the default branch (main, master, ...)
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - aws s3 sync dist s3://$BUCKET_ID --delete
    - curl $CI_ENVIRONMENT_URL | grep "Web Map Application"
    - curl $CI_ENVIRONMENT_URL/version.html | grep $APP_VERSION

deploy to development:
  stage: development
  # Use dedicated environment for staging
  environment: development
  extends: .deploy-template

deploy to production:
  stage: production
  when: manual
  # Use dedicated environment for production
  environment: production
  extends: .deploy-template
